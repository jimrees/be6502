MEMORY {
	ZP:		start = $0000, size = $0100, type = rw, file = "";
        BIOS_BUFFERS:   start = $0200, size = $0300, file = "";
	BASROM:		start = $8000, size = $7000, fill = yes, file = "%O.bin";
	SYSCALLSTUBS:	start = $F000, size = $0F00, fill = yes, file = "%O.bin";
	WOZMON:		start = $FF00, size = $00FA, fill = yes, file = "%O.bin";
        RESETVEC:       start = $FFFA, size = $0006, fill = yes, file = "%O.bin";
        XMBUFFER:       start = $3E00, size = $0200, file = "";
	DUMMY:		start = $0000, size = $00FF, file = "";
}

SEGMENTS {
        BIOSZP:         load = ZP, type = zp;
	ZEROPAGE:	load = ZP, type = zp;
        BIOS_BUFFERS:   load = BIOS_BUFFERS, type = bss, align = 256;
        BASRAM:         load = BIOS_BUFFERS, type = rw;
        BIOS_CODE:      load = BASROM,  type = ro;
	HEADER:		load = BASROM,	type = ro;
	VECTORS:	load = BASROM,	type = ro;
	KEYWORDS:	load = BASROM,	type = ro;
	ERROR:		load = BASROM,	type = ro;
	CODE:		load = BASROM,	type = ro;
	CHRGET:		load = BASROM,	type = ro;
	INIT:		load = BASROM,	type = ro;
	EXTRA:		load = BASROM,	type = ro;
        RODATA:         load = BASROM,  type = ro, align = 256;
        SYSCALLSTUBS:   load = SYSCALLSTUBS, type = ro, align = 16;
        WOZMON:         load = WOZMON,  type = ro;
        RESETVEC:       load = RESETVEC, type = ro;
        XMBSS:          load = XMBUFFER, type = bss, align = 256;
	DUMMY:		load = DUMMY; # don't include
}
